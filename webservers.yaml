Description:
  AWS Cloud formation project to create 4 EC2 instances and load balance them with aws load balancer
  this file contains cloud formation code for the web servers part
Parameters:
  EnvironmentName:
    Description: Environment name to be used with all resources as prefix
    Type: String
    Default: cloudformationProject
  MachineType:
    Description: Machine Type to be used for the web server
    Type: String
    Default: t2.medium
  AMIImage:
    Description: Image to be installed on the web server machines
    Type: String
    Default: ami-0e472ba40eb589f49

Resources:
  InstanceSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host and ssh from local only
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  LoadBalancerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http To LB
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PublicSubnet1"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PublicSubnet2"
      SecurityGroups:
        - !Ref LoadBalancerSecGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref WebServerTargetGroup
      LoadBalancerArn: !Ref WebLoadBalancer
      Port: 80
      Protocol: HTTP
    DependsOn:
      - WebLoadBalancer
      - WebServerTargetGroup
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref WebServerTargetGroup
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref Listener
      Priority: 1
  WebServerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 30
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
    DependsOn:
      - WebLoadBalancer
  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PrivateSubnets"
      LaunchConfigurationName:
        Ref: WebServerLaunchConfiguration
      MinSize: "4"
      MaxSize: "4"
      TargetGroupARNs:
        - Ref: WebServerTargetGroup
      HealthCheckGracePeriod: 60
      HealthCheckType: ELB
  WebServerLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
        UserData:
          Fn::Base64: !Sub |
            #! /bin/bash
            apt-get update -u
            apt-get install apache2 -y
            systemctl start apache2.service
            cd /var/www/html
            eco "Udacity Demo Web Server Up and Running!" > index.html
        ImageId: !Ref AMIImage
        SecurityGroups:
          - !Ref InstanceSecGroup
        InstanceType: !Ref MachineType
        BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: "10"
Outputs:
  WebLoadBalancer:
    Description: Public URl
    Value: !Join
      - ""
      - - "http://"
        - !GetAtt WebLoadBalancer.DNSName
    Export:
      Name: !Sub ${EnvironmentName}-WebLoadBalancer-URL
