Description: >
  AWS Cloud formation project to create 4 EC2 instances and load balance them with aws load balancer
Parameters:
  EnvironmentName:
    Description: Environment name to be used with all resources as prefix
    Type: String
    Default: cloudformationProject
  VpcCIDR:
    Description: CIDR to be used by VPC
    Type: String
    Default: 10.0.0.0/16
  PublicSubnetCIDR1:
    Description: CIDR to be used by public subnet 1
    Type: String
    Default: 10.0.0.0/24
  PublicSubnetCIDR2:
    Description: CIDR to be used by public subnet 2
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnetCIDR1:
    Description: CIDR to be used by private subnet 1
    Type: String
    Default: 10.0.2.0/24
  PrivateSubnetCIDR2:
    Description: CIDR to be used by private subnet 2
    Type: String
    Default: 10.0.3.0/24
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  EIP1:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: VPC
  EIP2:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: VPC
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnetCIDR1
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnetCIDR2
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetCIDR1
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetCIDR2
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
Outputs:
  VPC:
    Description: the created VPC for this project
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCID
  PublicSubnets:
    Description: list of public subnet in the project
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${EnvironmentName}-PublicSubnets
  PublicSubnet1:
    Description: Public Subnet 1 for the project
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PublicSubnet1
  PublicSubnet2:
    Description: Public Subnet 2 for the project
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PublicSubnet2
  PrivateSubnets:
    Description: List of private subnets in the projects
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
  PrivateSubnet1:
    Description: Private Subnet 1 for the project
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PrivateSubnet1
  PrivateSubnet2:
    Description: Private Subnet 2 for the project
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PrivateSubnet2
